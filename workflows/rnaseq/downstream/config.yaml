# ============================================================================
# RNA-seq configuration file
# ============================================================================
#
# The rnsaeq.Rmd RMarkdown file reads in the values from this YAML file.
#
# This file is split into sections, indicated by the top-level keys. RMarkdown
# chunks may depend on one or more of these sections. Changing a value in
# a section will cause all chunks depending on that section to be re-run.

main:

  # Path to sample table. It can be modified in the colData chunk if needed.
  sampletable: "../config/sampletable.tsv"


  # If you are using Ensembl annotations with gene IDs like ENSG000001.1 (with
  # the dotted version number), then these genes will not be found in the
  # OrgDb. Set this to TRUE to strip off the dotted version to fix this.
  strip_dotted_version: FALSE

  # If you have technical replicates, you can automatically collapse them.
  # Provide a column in colData here, and for each unique value in the column
  # the counts across samples sharing that value will be summed. Typically this
  # would be set to the column representing biological replicate, assuming
  # technical replicates share the same biological replicate ID.
  collapse_by: NULL

  # Whenever we call significant genes, we use this threshold for
  # log2FoldChange. E.g., setting this to 1 requires a 2x change in estimated
  # expression.
  lfc_thresh: 0

  # By default DESeq2 assumes alpha of 0.1 (when filtering low-count genes). If
  # you want something else, change it here. This is used alongside lfc_thresh
  # to select significant genes.
  alpha: 0.1

  # If you plan on creating dds objects with featureCounts that will be
  # compared with Salmon or Kallisto, there may be different numbers of genes
  # in the respective dds objects. By default, this mismatch will stop with an
  # error. If instead you want to use only the intersection of genes found in
  # all contrasts, set this to TRUE.
  force_intersect: TRUE

plotting:
  # For each item in this list you will get columns of colors in the clustered
  # heatmap and tabs for PCA plots.
  covariates_for_plots:
    - group

  # These arguments are passed to the respective clusterProfiler plotting functions. Any
  # arguments accepted by those functions can be added here.
  dotplot_args:
    showCategory: 20
    color: p.adjust
    size: NULL
    split: NULL
    font.size: 12
    x: GeneRatio


  emapplot_args:
    showCategory: 35
    color: p.adjust
    cex_label_category: .7
    cex_category: NULL
    cex_line: NULL

  cnetplot_args:
    showCategory: 5
    foldChange: NULL
    colorEdge: FALSE
    circular: FALSE
    node_label: all

# Parallel configuration
parallel:

  parallel: FALSE
  # If integer, use that many cores. If string, assume it's the name of an
  # environment variable that stores the number of cores (e.g.,
  # "SLURM_CPUS_PER_TASK")
  cores: 8

# This section provides toggles for various parts of the analysis.
toggle:

  # Import Salmon results instead of featureCounts?
  salmon: FALSE

  # Import Kallisto results instead of featureCounts?
  kallisto: FALSE

  # Run functional enrichment analysis?
  functional_enrichment: TRUE

  # If functional_enrichment is TRUE, you can optionally disable Reactome here
  # if noReactome database exists for your organism or the package is not
  # installed.
  run_reactome: FALSE

  # Run gene patterns analysis?
  gene_patterns: FALSE

  # Include help docs at the end of the HTML?
  help_docs: TRUE

# This section configures annotations and databases.
annotation:

  # Specify the genus and species
  genus_species: "Drosophila melanogaster"

  # You can optionally manually search AnnotationHub to find a different
  # annotation keys for OrgDb and/or TxDb and use them here to override the
  # default latest versions.
  orgdb_key_override: NULL
  txdb_key_override: NULL

  # The OrgDb will be downloaded here and subsequently read directly from this
  # directory
  hub_cache: "../../../include/AnnotationHubCache"
  localHub: FALSE
  force: FALSE

  # OrgDb key indicating the format of gene IDs in rownames(dds).
  keytype: 'ENSEMBL'

  msigdbr_keytype: "ensembl_gene"


  # Additional columns from the OrgDb to attach to the results
  orgdb_columns:
    - SYMBOL
    - ALIAS
    - UNIPROT
    - ENTREZID

  # For each column listed here, if a value is NA then it will be filled in
  # with the corresponding value from keytype above. Useful for when you want
  # use symbol where possible but fill in with the Ensembl ID when symbol is
  # not available.
  fill:
    - SYMBOL

  # Which column to use when labeling plots? E.g., MA and volcano plots
  label_column: SYMBOL


# This section configures the functional enrichment.
functional_enrichment:

  ontologies:
    # Standard Gene Ontology
    "BP": "GO Biological Process"
    "CC": "GO Cellular Component"
    "MF": "GO Molecular Function"

    # MSigDB (compiled for human, but orthologs are available which may be of
    # questionable utility for other organisms).  To see what's available, use
    # lcdbwf::available_msigdb_keys() and cross-reference with
    # https://www.gsea-msigdb.org/gsea/msigdb/collections.jsp
    "C2_CGP": "MSigDB chemical and genetic perturbations"
    "C2_CP": "MSigDb Canonical pathways"
    "C5_GO:BP": "MSigDB's version of BP"
    "C5_GO:CC": "MSigDB's version of CC"
    "C5_GO:MF": "MSigDB's version of MF"
    "C8": "MSigDB cell-type-specific gene sets"
    "H": "MSigDB hallmark gene sets"

  # Type can be "OR" for overrepresentation analysis, or "GSEA" for gene set
  # enrichment analysis.
  kind:
    - "GSEA"

  # Options here are "up", "down" or "changed".
  directions:
    - "up"
    - "down"

  # Any GO terms above these cutoffs will not be reported. Set to 1 if you're
  # fine getting plots even with no statistically significant terms.
  pvalueCutoff: 1
  qvalueCutoff: 1
